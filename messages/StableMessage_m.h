//
// Generated file, do not edit! Created by nedtool 5.2 from veins/modules/messages/StableMessage.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __STABLEMESSAGE_M_H
#define __STABLEMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "veins/modules/messages/WaveShortMessage_m.h"
// }}

/**
 * Class generated from <tt>veins/modules/messages/StableMessage.msg:25</tt> by nedtool.
 * <pre>
 * packet StableMessage extends WaveShortMessage
 * {
 *     int countNode = 0;
 *     int firstNodeSender;
 *     int successor;
 *     bool isStable = false;
 *     int id = 0;
 *     string chordName = "";
 *     double startTime = 0.0;
 *     double ringDelay = 0.0;
 * }
 * </pre>
 */
class StableMessage : public ::WaveShortMessage
{
  protected:
    int countNode;
    int firstNodeSender;
    int successor;
    bool isStable;
    int id;
    ::omnetpp::opp_string chordName;
    double startTime;
    double ringDelay;

  private:
    void copy(const StableMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const StableMessage&);

  public:
    StableMessage(const char *name=nullptr, short kind=0);
    StableMessage(const StableMessage& other);
    virtual ~StableMessage();
    StableMessage& operator=(const StableMessage& other);
    virtual StableMessage *dup() const override {return new StableMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getCountNode() const;
    virtual void setCountNode(int countNode);
    virtual int getFirstNodeSender() const;
    virtual void setFirstNodeSender(int firstNodeSender);
    virtual int getSuccessor() const;
    virtual void setSuccessor(int successor);
    virtual bool getIsStable() const;
    virtual void setIsStable(bool isStable);
    virtual int getId() const;
    virtual void setId(int id);
    virtual const char * getChordName() const;
    virtual void setChordName(const char * chordName);
    virtual double getStartTime() const;
    virtual void setStartTime(double startTime);
    virtual double getRingDelay() const;
    virtual void setRingDelay(double ringDelay);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const StableMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, StableMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __STABLEMESSAGE_M_H

